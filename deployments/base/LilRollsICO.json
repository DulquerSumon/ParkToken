{
  "address": "0xCD470E2C9d6ac2aC0257A31c1e6caaFa2226bC88",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_allowedStableCoins",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_startingTime",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_pWallet",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "r1HardCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r2HardCap",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.RoundHardCapInfo",
          "name": "_capInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "round1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "round2",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.TokenPriceInUSD",
          "name": "_price",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyEnabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AmountNotAvailableForSale",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AmountZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Invalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotStarted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RoundNotMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SCNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VestingNotEnabled",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        }
      ],
      "name": "TokenPurchased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_coins",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_status",
          "type": "bool[]"
        }
      ],
      "name": "addAllowedStableCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum LilRollsICO.PaymentType",
          "name": "_type",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amountToPay",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentToken",
          "type": "address"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableICO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_members",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_claimStartAt",
          "type": "uint256"
        }
      ],
      "name": "enableVestingForTeamAndDev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getICOInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "raisedTotalBase",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "raisedTotalSCToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "soldToken",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.ICOInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getIsAllowedStableCoin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoundHardCapInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "r1HardCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r2HardCap",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.RoundHardCapInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoundTimeInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "r1StartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r1EndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r2StartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r2EndTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.RoundTimeInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoundTokenSaleInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "r1SoldToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r1TokenForSale",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r2SoldToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r2TokenForSale",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.RoundTokenSaleInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTeamAndDevMembers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenPriceInUSD",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "round1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "round2",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.TokenPriceInUSD",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "r1Purchased",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "r2Purchased",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSCInvested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBaseInvested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalPurchased",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.UserInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRound1Completed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRound2Completed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_toWallet",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_base",
          "type": "bool"
        }
      ],
      "name": "retrieveStuckedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "round",
      "outputs": [
        {
          "internalType": "string",
          "name": "_round",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hardcap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_soldToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "updateOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "updateRound1Time",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "updateRound2Time",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "round1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "round2",
              "type": "uint256"
            }
          ],
          "internalType": "struct LilRollsICO.TokenPriceInUSD",
          "name": "_price",
          "type": "tuple"
        }
      ],
      "name": "updateTokenPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateVestingMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2a272e3ffbba84be2c735ba2e09bbf7aa8a8e4a48f72acfa1cd254dc9b5fdb4c",
  "receipt": {
    "to": null,
    "from": "0xF2D436aF71c57B2eDA53395258508B172fC51cB6",
    "contractAddress": "0xCD470E2C9d6ac2aC0257A31c1e6caaFa2226bC88",
    "transactionIndex": 5,
    "gasUsed": "3242797",
    "logsBloom": "0x
    "blockHash": "0x9cedfac3f84b1559d051a7aff053b14cdf1c701bd422b626a4556751a8144073",
    "transactionHash": "0x2a272e3ffbba84be2c735ba2e09bbf7aa8a8e4a48f72acfa1cd254dc9b5fdb4c",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 8676747,
        "transactionHash": "0x2a272e3ffbba84be2c735ba2e09bbf7aa8a8e4a48f72acfa1cd254dc9b5fdb4c",
        "address": "0xCD470E2C9d6ac2aC0257A31c1e6caaFa2226bC88",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f2d436af71c57b2eda53395258508b172fc51cb6"
        ],
        "data": "0x",
        "logIndex": 18,
        "blockHash": "0x9cedfac3f84b1559d051a7aff053b14cdf1c701bd422b626a4556751a8144073"
      }
    ],
    "blockNumber": 8676747,
    "cumulativeGasUsed": "3992625",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8ba8A86A4B4337Da354fb181539fc976b195812b",
    [
      "0x78D3bF989E3Fb32EF26a8914D2EBbc64D751a3B4"
    ],
    "1713094293",
    "0xF2D436aF71c57B2eDA53395258508B172fC51cB6",
    [
      "100000000000000000000000",
      "10000000000000000000000"
    ],
    [
      "1000",
      "2000"
    ],
    "0x4aDC67696bA383F43DD60A9e78F2C97Fbbfc7cb1"
  ],
  "numDeployments": 2,
  "solcInputHash": "ebf4c01017715db59cb50dc7bfcfc0ed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_allowedStableCoins\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_startingTime\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_pWallet\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r1HardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r2HardCap\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.RoundHardCapInfo\",\"name\":\"_capInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"round1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"round2\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.TokenPriceInUSD\",\"name\":\"_price\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountNotAvailableForSale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotStarted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RoundNotMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SCNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VestingNotEnabled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"}],\"name\":\"TokenPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_coins\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_status\",\"type\":\"bool[]\"}],\"name\":\"addAllowedStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum LilRollsICO.PaymentType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amountToPay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_claimStartAt\",\"type\":\"uint256\"}],\"name\":\"enableVestingForTeamAndDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getICOInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"raisedTotalBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedTotalSCToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"soldToken\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.ICOInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getIsAllowedStableCoin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoundHardCapInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r1HardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r2HardCap\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.RoundHardCapInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoundTimeInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r1StartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r1EndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r2StartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r2EndTime\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.RoundTimeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoundTokenSaleInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r1SoldToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r1TokenForSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r2SoldToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r2TokenForSale\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.RoundTokenSaleInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeamAndDevMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPriceInUSD\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"round1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"round2\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.TokenPriceInUSD\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"r1Purchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r2Purchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSCInvested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseInvested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchased\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.UserInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRound1Completed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRound2Completed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toWallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_base\",\"type\":\"bool\"}],\"name\":\"retrieveStuckedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_round\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardcap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_soldToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"updateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"updateRound1Time\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"updateRound2Time\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"round1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"round2\",\"type\":\"uint256\"}],\"internalType\":\"struct LilRollsICO.TokenPriceInUSD\",\"name\":\"_price\",\"type\":\"tuple\"}],\"name\":\"updateTokenPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateVestingMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LilRollsICO.sol\":\"LilRollsICO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LilRollsICO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n\\r\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n    error OwnableUnauthorizedAccount(address account);\\r\\n    error OwnableInvalidOwner(address owner);\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n    constructor(address initialOwner) {\\r\\n        if (initialOwner == address(0)) {\\r\\n            revert OwnableInvalidOwner(address(0));\\r\\n        }\\r\\n        _transferOwnership(initialOwner);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    function _checkOwner() internal view virtual {\\r\\n        if (owner() != _msgSender()) {\\r\\n            revert OwnableUnauthorizedAccount(_msgSender());\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        if (newOwner == address(0)) {\\r\\n            revert OwnableInvalidOwner(address(0));\\r\\n        }\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\ninterface IERC20 {\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n}\\r\\ninterface AggregatorV3Interface {\\r\\n    function latestRoundData()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint80 roundId,\\r\\n            int256 answer,\\r\\n            uint256 startedAt,\\r\\n            uint256 updatedAt,\\r\\n            uint80 answeredInRound\\r\\n        );\\r\\n}\\r\\ncontract LilRollsICO is Ownable {\\r\\n    error NotStarted();\\r\\n    error AmountNotAvailableForSale();\\r\\n    error RoundNotMatch();\\r\\n    error TransferFailed();\\r\\n    error SCNotAllowed();\\r\\n    error AlreadyEnabled();\\r\\n    error Invalid();\\r\\n    error LengthError();\\r\\n    error AmountZero();\\r\\n    error VestingNotEnabled();\\r\\n    IERC20 private token;\\r\\n    TokenPriceInUSD private tokenPriceInUSD;\\r\\n    uint256 private precision = 10000;\\r\\n    address payable projectWallet;\\r\\n    uint256 private roundPeriod;\\r\\n    mapping(address => bool) private isAllowedStableCoin;\\r\\n    mapping(address => UserInfo) private userInfo;\\r\\n    RoundTimeInfo private roundTimeInfo;\\r\\n    RoundHardCapInfo private roundHardCapInfo;\\r\\n    RoundTokenSaleInfo private roundTokenSaleInfo;\\r\\n    ICOInfo private icoInfo;\\r\\n    bool private isICOEnabled;\\r\\n    bool private isVestingEnabled;\\r\\n    address[] private teamAndDevMembers;\\r\\n    uint256 private claimStartedAt;\\r\\n    uint256 private minimumDelayBetweenClaim;\\r\\n    mapping(address => uint256) private memberToTotalAmount;\\r\\n    mapping(address => uint256) private memberToTotalAmountClaimed;\\r\\n    mapping(address => uint256) private memberLastClaimedAT;\\r\\n    AggregatorV3Interface priceFeed;\\r\\n\\r\\n    struct RoundTimeInfo {\\r\\n        uint256 r1StartTime;\\r\\n        uint256 r1EndTime;\\r\\n        uint256 r2StartTime;\\r\\n        uint256 r2EndTime;\\r\\n    }\\r\\n\\r\\n    struct RoundHardCapInfo {\\r\\n        uint256 r1HardCap;\\r\\n        uint256 r2HardCap;\\r\\n    }\\r\\n\\r\\n    struct RoundTokenSaleInfo {\\r\\n        uint256 r1SoldToken;\\r\\n        uint256 r1TokenForSale;\\r\\n        uint256 r2SoldToken;\\r\\n        uint256 r2TokenForSale;\\r\\n    }\\r\\n\\r\\n    struct UserInfo {\\r\\n        uint256 r1Purchased;\\r\\n        uint256 r2Purchased;\\r\\n        uint256 totalSCInvested;\\r\\n        uint256 totalBaseInvested;\\r\\n        uint256 totalPurchased;\\r\\n    }\\r\\n\\r\\n    struct ICOInfo {\\r\\n        uint256 raisedTotalBase;\\r\\n        uint256 raisedTotalSCToken;\\r\\n        uint256 soldToken;\\r\\n    }\\r\\n\\r\\n    struct TokenPriceInUSD {\\r\\n        uint256 round1;\\r\\n        uint256 round2;\\r\\n    }\\r\\n\\r\\n    enum PaymentType {\\r\\n        Base,\\r\\n        StableCoin\\r\\n    }\\r\\n\\r\\n    event TokenPurchased(\\r\\n        uint256 indexed tokenAmount,\\r\\n        uint256 indexed amountPaid,\\r\\n        address purchaser\\r\\n    );\\r\\n\\r\\n    constructor(\\r\\n        address _token,\\r\\n        address[] memory _allowedStableCoins,\\r\\n        uint256 _startingTime,\\r\\n        address payable _pWallet,\\r\\n        RoundHardCapInfo memory _capInfo,\\r\\n        TokenPriceInUSD memory _price,\\r\\n        address _oracle\\r\\n    ) Ownable(_pWallet) {\\r\\n        projectWallet = _pWallet;\\r\\n        roundHardCapInfo = _capInfo;\\r\\n        roundPeriod = 30 days;\\r\\n        priceFeed = AggregatorV3Interface(_oracle);\\r\\n        token = IERC20(_token);\\r\\n        for (uint256 i = 0; i < _allowedStableCoins.length; i++) {\\r\\n            isAllowedStableCoin[_allowedStableCoins[i]] = true;\\r\\n        }\\r\\n        roundTimeInfo.r1StartTime = _startingTime;\\r\\n        roundTimeInfo.r1EndTime = (roundTimeInfo.r1StartTime + roundPeriod) - 1;\\r\\n        roundTimeInfo.r2StartTime = roundTimeInfo.r1EndTime + 1;\\r\\n        roundTimeInfo.r2EndTime = (roundTimeInfo.r2StartTime + roundPeriod) - 1;\\r\\n\\r\\n        roundTokenSaleInfo.r1TokenForSale = roundHardCapInfo.r1HardCap;\\r\\n        roundTokenSaleInfo.r2TokenForSale = roundHardCapInfo.r2HardCap;\\r\\n        tokenPriceInUSD = _price;\\r\\n    }\\r\\n\\r\\n    function updateOracle(address _new) public onlyOwner {\\r\\n        priceFeed = AggregatorV3Interface(_new);\\r\\n    }\\r\\n\\r\\n    function updateToken(address _new) public onlyOwner {\\r\\n        if (isICOEnabled) {\\r\\n            revert AlreadyEnabled();\\r\\n        }\\r\\n        token = IERC20(_new);\\r\\n    }\\r\\n\\r\\n    function addAllowedStableCoin(\\r\\n        address[] memory _coins,\\r\\n        bool[] memory _status\\r\\n    ) public onlyOwner {\\r\\n        if (_coins.length != _status.length) {\\r\\n            revert LengthError();\\r\\n        }\\r\\n        for (uint256 i = 0; i < _coins.length; i++) {\\r\\n            isAllowedStableCoin[_coins[i]] = _status[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function enableICO() public onlyOwner {\\r\\n        if (isICOEnabled) {\\r\\n            revert AlreadyEnabled();\\r\\n        }\\r\\n        isICOEnabled = true;\\r\\n        uint256 amount = roundHardCapInfo.r1HardCap +\\r\\n            roundHardCapInfo.r2HardCap;\\r\\n        token.transferFrom(msg.sender, address(this), amount);\\r\\n    }\\r\\n\\r\\n    function updateVestingMode() public onlyOwner {\\r\\n        isVestingEnabled = !isVestingEnabled;\\r\\n    }\\r\\n\\r\\n    function enableVestingForTeamAndDev(\\r\\n        address[] memory _members,\\r\\n        uint256[] memory _amounts,\\r\\n        uint256 _claimStartAt\\r\\n    ) public onlyOwner {\\r\\n        if (_members.length != _amounts.length) {\\r\\n            revert LengthError();\\r\\n        }\\r\\n        claimStartedAt = _claimStartAt;\\r\\n        minimumDelayBetweenClaim = 30 days;\\r\\n        isVestingEnabled = true;\\r\\n        uint256 total;\\r\\n        for (uint256 i = 0; i < _members.length; i++) {\\r\\n            teamAndDevMembers.push(_members[i]);\\r\\n            memberToTotalAmount[_members[i]] += _amounts[i];\\r\\n            total += _amounts[i];\\r\\n        }\\r\\n        token.transferFrom(msg.sender, address(this), total);\\r\\n    }\\r\\n\\r\\n    function claimToken() public {\\r\\n        if (!isVestingEnabled) {\\r\\n            revert VestingNotEnabled();\\r\\n        }\\r\\n        if (memberToTotalAmount[msg.sender] <= 0) {\\r\\n            revert AmountZero();\\r\\n        }\\r\\n        uint256 timesCount;\\r\\n        if (memberLastClaimedAT[msg.sender] <= claimStartedAt) {\\r\\n            if (block.timestamp > claimStartedAt + minimumDelayBetweenClaim) {\\r\\n                timesCount =\\r\\n                    (block.timestamp - claimStartedAt) /\\r\\n                    minimumDelayBetweenClaim;\\r\\n            } else {\\r\\n                timesCount = 1;\\r\\n            }\\r\\n            memberLastClaimedAT[msg.sender] = block.timestamp;\\r\\n        } else if (memberLastClaimedAT[msg.sender] >= claimStartedAt) {\\r\\n            timesCount =\\r\\n                (block.timestamp - memberLastClaimedAT[msg.sender]) /\\r\\n                minimumDelayBetweenClaim;\\r\\n            memberLastClaimedAT[msg.sender] =\\r\\n                memberLastClaimedAT[msg.sender] +\\r\\n                (timesCount * minimumDelayBetweenClaim);\\r\\n        }\\r\\n        uint256 amount = memberToTotalAmount[msg.sender] / 24;\\r\\n        uint256 claimAmount = amount * timesCount;\\r\\n        if (\\r\\n            memberToTotalAmountClaimed[msg.sender] + claimAmount >\\r\\n            memberToTotalAmount[msg.sender]\\r\\n        ) {\\r\\n            claimAmount =\\r\\n                memberToTotalAmount[msg.sender] -\\r\\n                memberToTotalAmountClaimed[msg.sender];\\r\\n        }\\r\\n        if (claimAmount == 0) {\\r\\n            revert AmountZero();\\r\\n        }\\r\\n        memberToTotalAmountClaimed[msg.sender] += claimAmount;\\r\\n        token.transfer(msg.sender, claimAmount);\\r\\n    }\\r\\n\\r\\n    function updateRound1Time(\\r\\n        uint256 _startTime\\r\\n    ) public onlyOwner returns (bool) {\\r\\n        roundTimeInfo.r1StartTime = _startTime;\\r\\n        roundTimeInfo.r1EndTime = (roundTimeInfo.r1StartTime + roundPeriod) - 1;\\r\\n        roundTimeInfo.r2StartTime = roundTimeInfo.r1EndTime + 1;\\r\\n        roundTimeInfo.r2EndTime = (roundTimeInfo.r2StartTime + roundPeriod) - 1;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function updateRound2Time(\\r\\n        uint256 _startTime\\r\\n    ) public onlyOwner returns (bool) {\\r\\n        roundTimeInfo.r1EndTime = block.timestamp;\\r\\n        roundTimeInfo.r2StartTime = _startTime;\\r\\n        roundTimeInfo.r2EndTime = (roundTimeInfo.r2StartTime + roundPeriod) - 1;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function updateTokenPrice(\\r\\n        TokenPriceInUSD memory _price\\r\\n    ) public onlyOwner returns (bool) {\\r\\n        tokenPriceInUSD = _price;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function retrieveStuckedAsset(\\r\\n        address _tokenAddr,\\r\\n        uint256 _amount,\\r\\n        address _toWallet,\\r\\n        bool _base\\r\\n    ) public onlyOwner returns (bool) {\\r\\n        IERC20(_tokenAddr).transfer(_toWallet, _amount);\\r\\n        if (address(this).balance > 0 && _base) {\\r\\n            (bool success, ) = projectWallet.call{value: address(this).balance}(\\r\\n                \\\"\\\"\\r\\n            );\\r\\n            if (!success) revert TransferFailed();\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        buy(PaymentType.Base, msg.value, address(0));\\r\\n    }\\r\\n\\r\\n    function buy(\\r\\n        PaymentType _type,\\r\\n        uint256 _amountToPay,\\r\\n        address _paymentToken\\r\\n    ) public payable returns (bool) {\\r\\n        if (tokenPriceInUSD.round1 == 0) {\\r\\n            revert NotStarted();\\r\\n        }\\r\\n        uint256 currentTime = block.timestamp;\\r\\n        address currentInvestor = msg.sender;\\r\\n        uint256 amountToPay;\\r\\n        UserInfo storage user = userInfo[currentInvestor];\\r\\n        if (_type == PaymentType.Base) {\\r\\n            amountToPay = getConversionRate(msg.value);\\r\\n            (bool success, ) = projectWallet.call{value: msg.value}(\\\"\\\");\\r\\n            if (!success) revert TransferFailed();\\r\\n            user.totalBaseInvested += msg.value;\\r\\n            icoInfo.raisedTotalBase += msg.value;\\r\\n        } else if (_type == PaymentType.StableCoin) {\\r\\n            amountToPay = _amountToPay;\\r\\n            if (!isAllowedStableCoin[_paymentToken]) {\\r\\n                revert SCNotAllowed();\\r\\n            }\\r\\n            IERC20(_paymentToken).transferFrom(\\r\\n                currentInvestor,\\r\\n                projectWallet,\\r\\n                amountToPay\\r\\n            );\\r\\n            user.totalSCInvested += amountToPay;\\r\\n            icoInfo.raisedTotalSCToken += amountToPay;\\r\\n        }\\r\\n\\r\\n        uint256 amount;\\r\\n\\r\\n        if (\\r\\n            currentTime >= roundTimeInfo.r1StartTime &&\\r\\n            currentTime <= roundTimeInfo.r1EndTime\\r\\n        ) {\\r\\n            amount = (amountToPay / tokenPriceInUSD.round1) * precision;\\r\\n            if (roundTokenSaleInfo.r1TokenForSale < amount) {\\r\\n                revert AmountNotAvailableForSale();\\r\\n            }\\r\\n            roundTokenSaleInfo.r1TokenForSale -= amount;\\r\\n            roundTokenSaleInfo.r1SoldToken += amount;\\r\\n            user.r1Purchased += amount;\\r\\n        } else if (\\r\\n            currentTime >= roundTimeInfo.r2StartTime &&\\r\\n            currentTime <= roundTimeInfo.r2EndTime\\r\\n        ) {\\r\\n            amount = (amountToPay / tokenPriceInUSD.round2) * precision;\\r\\n            if (roundTokenSaleInfo.r2TokenForSale < amount) {\\r\\n                revert AmountNotAvailableForSale();\\r\\n            }\\r\\n            roundTokenSaleInfo.r2TokenForSale -= amount;\\r\\n            roundTokenSaleInfo.r2SoldToken += amount;\\r\\n            user.r2Purchased += amount;\\r\\n        } else {\\r\\n            revert RoundNotMatch();\\r\\n        }\\r\\n        if (amount <= 0) {\\r\\n            revert AmountZero();\\r\\n        }\\r\\n        icoInfo.soldToken += amount;\\r\\n        user.totalPurchased += amount;\\r\\n        token.transfer(currentInvestor, amount);\\r\\n        emit TokenPurchased(amount, amountToPay, currentInvestor);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 bnbAmount\\r\\n    ) internal view returns (uint256) {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        uint256 bnbPrice = uint256(answer) * 10000000000;\\r\\n        uint256 bnbAmountInUsd = (bnbPrice * bnbAmount) / 1000000000000000000;\\r\\n        return bnbAmountInUsd;\\r\\n    }\\r\\n\\r\\n    function round()\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            string memory _round,\\r\\n            uint256 endTime,\\r\\n            uint256 _hardcap,\\r\\n            uint256 _soldToken,\\r\\n            uint256 _price\\r\\n        )\\r\\n    {\\r\\n        uint256 currentTime = block.timestamp;\\r\\n        if (\\r\\n            currentTime >= roundTimeInfo.r1StartTime &&\\r\\n            currentTime <= roundTimeInfo.r1EndTime\\r\\n        ) {\\r\\n            string memory Round = \\\"PreSale 1\\\";\\r\\n            return (\\r\\n                Round,\\r\\n                roundTimeInfo.r1EndTime,\\r\\n                roundHardCapInfo.r1HardCap,\\r\\n                roundTokenSaleInfo.r1SoldToken,\\r\\n                tokenPriceInUSD.round1\\r\\n            );\\r\\n        } else if (\\r\\n            currentTime >= roundTimeInfo.r2StartTime &&\\r\\n            currentTime <= roundTimeInfo.r2EndTime\\r\\n        ) {\\r\\n            string memory Round = \\\"Public Sale 1\\\";\\r\\n            return (\\r\\n                Round,\\r\\n                roundTimeInfo.r2EndTime,\\r\\n                roundHardCapInfo.r2HardCap,\\r\\n                roundTokenSaleInfo.r2SoldToken,\\r\\n                tokenPriceInUSD.round2\\r\\n            );\\r\\n        } else {\\r\\n            require(false, \\\"Please check ICO time\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function isRound1Completed() public view returns (bool) {\\r\\n        if (\\r\\n            block.timestamp > roundTimeInfo.r1EndTime ||\\r\\n            roundTokenSaleInfo.r1TokenForSale == 0\\r\\n        ) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function isRound2Completed() public view returns (bool) {\\r\\n        if (\\r\\n            block.timestamp > roundTimeInfo.r2EndTime ||\\r\\n            roundTokenSaleInfo.r2TokenForSale == 0\\r\\n        ) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getICOInfo() public view returns (ICOInfo memory) {\\r\\n        return icoInfo;\\r\\n    }\\r\\n    function getRoundTimeInfo() public view returns (RoundTimeInfo memory) {\\r\\n        return roundTimeInfo;\\r\\n    }\\r\\n    function getRoundHardCapInfo()\\r\\n        public\\r\\n        view\\r\\n        returns (RoundHardCapInfo memory)\\r\\n    {\\r\\n        return roundHardCapInfo;\\r\\n    }\\r\\n    function getRoundTokenSaleInfo()\\r\\n        public\\r\\n        view\\r\\n        returns (RoundTokenSaleInfo memory)\\r\\n    {\\r\\n        return roundTokenSaleInfo;\\r\\n    }\\r\\n    function getUserInfo(address _user) public view returns (UserInfo memory) {\\r\\n        return userInfo[_user];\\r\\n    }\\r\\n    function getTokenPriceInUSD() public view returns (TokenPriceInUSD memory) {\\r\\n        return tokenPriceInUSD;\\r\\n    }\\r\\n\\r\\n    function getIsAllowedStableCoin(address _token) public view returns (bool) {\\r\\n        return isAllowedStableCoin[_token];\\r\\n    }\\r\\n\\r\\n    function getTeamAndDevMembers() public view returns (address[] memory) {\\r\\n        return teamAndDevMembers;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7f54d3063597b4b4e57dbcc7b9abd0d87d97163d290c526e947fac43de412318\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526127106004553480156200001757600080fd5b5060405162003b6a38038062003b6a83398181016040528101906200003d9190620006f2565b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b35760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000aa9190620007d7565b60405180910390fd5b620000c4816200030960201b60201c565b5083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600d600082015181600001556020820151816001015590505062278d0060068190555080601d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b86518110156200024457600160076000898481518110620001d557620001d4620007f4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200023b9062000852565b915050620001af565b508460096000018190555060016006546009600001546200026691906200089f565b620002729190620008da565b60096001018190555060016009600101546200028f91906200089f565b6009600201819055506001600654600960020154620002af91906200089f565b620002bb9190620008da565b600960030181905550600d60000154600f60010181905550600d60010154600f6003018190555081600260008201518160000155602082015181600101559050505050505050505062000915565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040e82620003e1565b9050919050565b620004208162000401565b81146200042c57600080fd5b50565b600081519050620004408162000415565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000496826200044b565b810181811067ffffffffffffffff82111715620004b857620004b76200045c565b5b80604052505050565b6000620004cd620003cd565b9050620004db82826200048b565b919050565b600067ffffffffffffffff821115620004fe57620004fd6200045c565b5b602082029050602081019050919050565b600080fd5b60006200052b6200052584620004e0565b620004c1565b905080838252602082019050602084028301858111156200055157620005506200050f565b5b835b818110156200057e57806200056988826200042f565b84526020840193505060208101905062000553565b5050509392505050565b600082601f830112620005a0576200059f62000446565b5b8151620005b284826020860162000514565b91505092915050565b6000819050919050565b620005d081620005bb565b8114620005dc57600080fd5b50565b600081519050620005f081620005c5565b92915050565b60006200060382620003e1565b9050919050565b6200061581620005f6565b81146200062157600080fd5b50565b60008151905062000635816200060a565b92915050565b600080fd5b6000604082840312156200065957620006586200063b565b5b620006656040620004c1565b905060006200067784828501620005df565b60008301525060206200068d84828501620005df565b60208301525092915050565b600060408284031215620006b257620006b16200063b565b5b620006be6040620004c1565b90506000620006d084828501620005df565b6000830152506020620006e684828501620005df565b60208301525092915050565b6000806000806000806000610120888a031215620007155762000714620003d7565b5b6000620007258a828b016200042f565b975050602088015167ffffffffffffffff811115620007495762000748620003dc565b5b620007578a828b0162000588565b96505060406200076a8a828b01620005df565b95505060606200077d8a828b0162000624565b9450506080620007908a828b0162000640565b93505060c0620007a38a828b0162000699565b925050610100620007b78a828b016200042f565b91505092959891949750929550565b620007d18162000401565b82525050565b6000602082019050620007ee6000830184620007c6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200085f82620005bb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000894576200089362000823565b5b600182019050919050565b6000620008ac82620005bb565b9150620008b983620005bb565b9250828201905080821115620008d457620008d362000823565b5b92915050565b6000620008e782620005bb565b9150620008f483620005bb565b92508282039050818111156200090f576200090e62000823565b5b92915050565b61324580620009256000396000f3fe6080604052600436106101855760003560e01c8063715018a6116100d1578063a8766bc11161008a578063d0d5a1ba11610064578063d0d5a1ba14610556578063e4db04fb14610586578063f2fde38b146105c3578063fd47504c146105ec57610199565b8063a8766bc1146104e9578063b47e536314610514578063cee401ef1461053f57610199565b8063715018a6146103d95780637ad3def2146103f05780637b770045146104195780638da5cb5b146104445780639c89f0fe1461046f578063a8525aa3146104ac57610199565b806332bd6ac11161013e578063562c9bca11610118578063562c9bca1461031d5780636386c1c7146103485780636c3ed4c8146103855780636cf557ec146103b057610199565b806332bd6ac1146102a05780633c0b15c0146102dd5780634451d89f1461030657610199565b8063033a35c01461019e57806306ea27ef146101c9578063146ca531146101e05780631cb44dfc1461020f5780631f565e311461023857806328a0d8f11461027557610199565b36610199576101976000346000610617565b005b600080fd5b3480156101aa57600080fd5b506101b3610ca7565b6040516101c0919061228a565b60405180910390f35b3480156101d557600080fd5b506101de610cd5565b005b3480156101ec57600080fd5b506101f5610d09565b604051610206959493929190612344565b60405180910390f35b34801561021b57600080fd5b5061023660048036038101906102319190612410565b610e66565b005b34801561024457600080fd5b5061025f600480360381019061025a9190612469565b610eb2565b60405161026c91906124b1565b60405180910390f35b34801561028157600080fd5b5061028a610f01565b604051610297919061250e565b60405180910390f35b3480156102ac57600080fd5b506102c760048036038101906102c291906125f9565b610f39565b6040516102d491906124b1565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff91906127b6565b610f66565b005b34801561031257600080fd5b5061031b6111d2565b005b34801561032957600080fd5b50610332611755565b60405161033f91906124b1565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a9190612410565b611785565b60405161037c91906128a9565b60405180910390f35b34801561039157600080fd5b5061039a611810565b6040516103a79190612982565b60405180910390f35b3480156103bc57600080fd5b506103d760048036038101906103d29190612a93565b61189e565b005b3480156103e557600080fd5b506103ee611990565b005b3480156103fc57600080fd5b5061041760048036038101906104129190612410565b6119a4565b005b34801561042557600080fd5b5061042e611a37565b60405161043b91906124b1565b60405180910390f35b34801561045057600080fd5b50610459611a67565b6040516104669190612b1a565b60405180910390f35b34801561047b57600080fd5b5061049660048036038101906104919190612410565b611a90565b6040516104a391906124b1565b60405180910390f35b3480156104b857600080fd5b506104d360048036038101906104ce9190612b35565b611ae6565b6040516104e091906124b1565b60405180910390f35b3480156104f557600080fd5b506104fe611c54565b60405161050b9190612bcb565b60405180910390f35b34801561052057600080fd5b50610529611c82565b6040516105369190612c3b565b60405180910390f35b34801561054b57600080fd5b50610554611cc4565b005b610570600480360381019061056b9190612c7b565b610617565b60405161057d91906124b1565b60405180910390f35b34801561059257600080fd5b506105ad60048036038101906105a89190612469565b611dee565b6040516105ba91906124b1565b60405180910390f35b3480156105cf57600080fd5b506105ea60048036038101906105e59190612410565b611e76565b005b3480156105f857600080fd5b50610601611efc565b60405161060e9190612d23565b60405180910390f35b60008060026000015403610657576040517f6f312cbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60004290506000339050600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600060018111156106b9576106b8612d3e565b5b8860018111156106cc576106cb612d3e565b5b036107de576106da34611f3e565b91506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405161072490612d9e565b60006040518083038185875af1925050503d8060008114610761576040519150601f19603f3d011682016040523d82523d6000602084013e610766565b606091505b50509050806107a1576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b348260030160008282546107b59190612de2565b9250508190555034601360000160008282546107d19190612de2565b925050819055505061096b565b6001808111156107f1576107f0612d3e565b5b88600181111561080457610803612d3e565b5b0361096a57869150600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661088f576040517fbf888b5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd84600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b81526004016108ee93929190612e75565b6020604051808303816000875af115801561090d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109319190612ec1565b50818160020160008282546109469190612de2565b9250508190555081601360010160008282546109629190612de2565b925050819055505b5b6000600960000154851015801561098757506009600101548511155b15610a4357600454600260000154846109a09190612f1d565b6109aa9190612f4e565b905080600f6001015410156109eb576040517fd013fe7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f6001016000828254610a009190612f90565b9250508190555080600f6000016000828254610a1c9190612de2565b9250508190555080826000016000828254610a379190612de2565b92505081905550610b4c565b6009600201548510158015610a5d57506009600301548511155b15610b195760045460026001015484610a769190612f1d565b610a809190612f4e565b905080600f600301541015610ac1576040517fd013fe7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f6003016000828254610ad69190612f90565b9250508190555080600f6002016000828254610af29190612de2565b9250508190555080826001016000828254610b0d9190612de2565b92505081905550610b4b565b6040517ff721b7ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b60008111610b86576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060136002016000828254610b9b9190612de2565b9250508190555080826004016000828254610bb69190612de2565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401610c1a929190612fc4565b6020604051808303816000875af1158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190612ec1565b5082817fe58b9ee1e58fdb7c85bb2c81b24351f11e5a77f2c91dc346c0444da8d47fef5e86604051610c8f9190612b1a565b60405180910390a36001955050505050509392505050565b610caf61216e565b600d60405180604001604052908160008201548152602001600182015481525050905090565b610cdd61201b565b601660019054906101000a900460ff1615601660016101000a81548160ff021916908315150217905550565b606060008060008060004290506009600001548110158015610d3057506009600101548111155b15610d995760006040518060400160405280600981526020017f50726553616c6520310000000000000000000000000000000000000000000000815250905080600960010154600d60000154600f60000154600260000154965096509650965096505050610e5f565b6009600201548110158015610db357506009600301548111155b15610e1c5760006040518060400160405280600d81526020017f5075626c69632053616c65203100000000000000000000000000000000000000815250905080600960030154600d60010154600f60020154600260010154965096509650965096505050610e5f565b6000610e5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5490613039565b60405180910390fd5b505b9091929394565b610e6e61201b565b80601d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610ebc61201b565b42600960010181905550816009600201819055506001600654600960020154610ee59190612de2565b610eef9190612f90565b60096003018190555060019050919050565b610f09612188565b60136040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b6000610f4361201b565b816002600082015181600001556020820151816001015590505060019050919050565b610f6e61201b565b8151835114610fa9576040517f34080bf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060188190555062278d006019819055506001601660016101000a81548160ff021916908315150217905550600080600090505b8451811015611128576017858281518110610ffb57610ffa613059565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083818151811061107657611075613059565b5b6020026020010151601a600087848151811061109557611094613059565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110e69190612de2565b92505081905550838181518110611100576110ff613059565b5b6020026020010151826111139190612de2565b9150808061112090613088565b915050610fdd565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611188939291906130d0565b6020604051808303816000875af11580156111a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb9190612ec1565b5050505050565b601660019054906101000a900460ff16611218576040517f74f75e3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611291576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000601854601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611362576019546018546112eb9190612de2565b42111561131457601954601854426113039190612f90565b61130d9190612f1d565b9050611319565b600190505b42601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114a1565b601854601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106114a057601954601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426113f89190612f90565b6114029190612f1d565b9050601954816114129190612f4e565b601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461145c9190612de2565b601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b60006018601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef9190612f1d565b9050600082826114ff9190612f4e565b9050601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481601b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461158c9190612de2565b111561161f57601b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461161c9190612f90565b90505b60008103611659576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80601b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116a89190612de2565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161170c929190612fc4565b6020604051808303816000875af115801561172b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174f9190612ec1565b50505050565b600060096003015442118061176f57506000600f60030154145b1561177d5760019050611782565b600090505b90565b61178d6121a9565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6060601780548060200260200160405190810160405280929190818152602001828054801561189457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161184a575b5050505050905090565b6118a661201b565b80518251146118e1576040517f34080bf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561198b57818181518110611900576118ff613059565b5b60200260200101516007600085848151811061191f5761191e613059565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061198390613088565b9150506118e4565b505050565b61199861201b565b6119a260006120a2565b565b6119ac61201b565b601660009054906101000a900460ff16156119f3576040517ff2a5f75a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600960010154421180611a5157506000600f60010154145b15611a5f5760019050611a64565b600090505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000611af061201b565b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401611b2b929190612fc4565b6020604051808303816000875af1158015611b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6e9190612ec1565b50600047118015611b7c5750815b15611c48576000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1647604051611bc990612d9e565b60006040518083038185875af1925050503d8060008114611c06576040519150601f19603f3d011682016040523d82523d6000602084013e611c0b565b606091505b5050905080611c46576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b60019050949350505050565b611c5c6121d8565b600260405180604001604052908160008201548152602001600182015481525050905090565b611c8a6121f2565b600f604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b611ccc61201b565b601660009054906101000a900460ff1615611d13576040517ff2a5f75a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001601660006101000a81548160ff0219169083151502179055506000600d60010154600d60000154611d469190612de2565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611da7939291906130d0565b6020604051808303816000875af1158015611dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dea9190612ec1565b5050565b6000611df861201b565b816009600001819055506001600654600960000154611e179190612de2565b611e219190612f90565b6009600101819055506001600960010154611e3c9190612de2565b6009600201819055506001600654600960020154611e5a9190612de2565b611e649190612f90565b60096003018190555060019050919050565b611e7e61201b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ef05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611ee79190612b1a565b60405180910390fd5b611ef9816120a2565b50565b611f0461221a565b6009604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b600080601d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd29190613194565b50505091505060006402540be40082611feb9190612f4e565b90506000670de0b6b3a764000085836120049190612f4e565b61200e9190612f1d565b9050809350505050919050565b612023612166565b73ffffffffffffffffffffffffffffffffffffffff16612041611a67565b73ffffffffffffffffffffffffffffffffffffffff16146120a057612064612166565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016120979190612b1a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000819050919050565b61225581612242565b82525050565b604082016000820151612271600085018261224c565b506020820151612284602085018261224c565b50505050565b600060408201905061229f600083018461225b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122df5780820151818401526020810190506122c4565b60008484015250505050565b6000601f19601f8301169050919050565b6000612307826122a5565b61231181856122b0565b93506123218185602086016122c1565b61232a816122eb565b840191505092915050565b61233e81612242565b82525050565b600060a082019050818103600083015261235e81886122fc565b905061236d6020830187612335565b61237a6040830186612335565b6123876060830185612335565b6123946080830184612335565b9695505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123dd826123b2565b9050919050565b6123ed816123d2565b81146123f857600080fd5b50565b60008135905061240a816123e4565b92915050565b600060208284031215612426576124256123a8565b5b6000612434848285016123fb565b91505092915050565b61244681612242565b811461245157600080fd5b50565b6000813590506124638161243d565b92915050565b60006020828403121561247f5761247e6123a8565b5b600061248d84828501612454565b91505092915050565b60008115159050919050565b6124ab81612496565b82525050565b60006020820190506124c660008301846124a2565b92915050565b6060820160008201516124e2600085018261224c565b5060208201516124f5602085018261224c565b506040820151612508604085018261224c565b50505050565b600060608201905061252360008301846124cc565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612566826122eb565b810181811067ffffffffffffffff821117156125855761258461252e565b5b80604052505050565b600061259861239e565b90506125a4828261255d565b919050565b6000604082840312156125bf576125be612529565b5b6125c9604061258e565b905060006125d984828501612454565b60008301525060206125ed84828501612454565b60208301525092915050565b60006040828403121561260f5761260e6123a8565b5b600061261d848285016125a9565b91505092915050565b600080fd5b600067ffffffffffffffff8211156126465761264561252e565b5b602082029050602081019050919050565b600080fd5b600061266f61266a8461262b565b61258e565b9050808382526020820190506020840283018581111561269257612691612657565b5b835b818110156126bb57806126a788826123fb565b845260208401935050602081019050612694565b5050509392505050565b600082601f8301126126da576126d9612626565b5b81356126ea84826020860161265c565b91505092915050565b600067ffffffffffffffff82111561270e5761270d61252e565b5b602082029050602081019050919050565b600061273261272d846126f3565b61258e565b9050808382526020820190506020840283018581111561275557612754612657565b5b835b8181101561277e578061276a8882612454565b845260208401935050602081019050612757565b5050509392505050565b600082601f83011261279d5761279c612626565b5b81356127ad84826020860161271f565b91505092915050565b6000806000606084860312156127cf576127ce6123a8565b5b600084013567ffffffffffffffff8111156127ed576127ec6123ad565b5b6127f9868287016126c5565b935050602084013567ffffffffffffffff81111561281a576128196123ad565b5b61282686828701612788565b925050604061283786828701612454565b9150509250925092565b60a082016000820151612857600085018261224c565b50602082015161286a602085018261224c565b50604082015161287d604085018261224c565b506060820151612890606085018261224c565b5060808201516128a3608085018261224c565b50505050565b600060a0820190506128be6000830184612841565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128f9816123d2565b82525050565b600061290b83836128f0565b60208301905092915050565b6000602082019050919050565b600061292f826128c4565b61293981856128cf565b9350612944836128e0565b8060005b8381101561297557815161295c88826128ff565b975061296783612917565b925050600181019050612948565b5085935050505092915050565b6000602082019050818103600083015261299c8184612924565b905092915050565b600067ffffffffffffffff8211156129bf576129be61252e565b5b602082029050602081019050919050565b6129d981612496565b81146129e457600080fd5b50565b6000813590506129f6816129d0565b92915050565b6000612a0f612a0a846129a4565b61258e565b90508083825260208201905060208402830185811115612a3257612a31612657565b5b835b81811015612a5b5780612a4788826129e7565b845260208401935050602081019050612a34565b5050509392505050565b600082601f830112612a7a57612a79612626565b5b8135612a8a8482602086016129fc565b91505092915050565b60008060408385031215612aaa57612aa96123a8565b5b600083013567ffffffffffffffff811115612ac857612ac76123ad565b5b612ad4858286016126c5565b925050602083013567ffffffffffffffff811115612af557612af46123ad565b5b612b0185828601612a65565b9150509250929050565b612b14816123d2565b82525050565b6000602082019050612b2f6000830184612b0b565b92915050565b60008060008060808587031215612b4f57612b4e6123a8565b5b6000612b5d878288016123fb565b9450506020612b6e87828801612454565b9350506040612b7f878288016123fb565b9250506060612b90878288016129e7565b91505092959194509250565b604082016000820151612bb2600085018261224c565b506020820151612bc5602085018261224c565b50505050565b6000604082019050612be06000830184612b9c565b92915050565b608082016000820151612bfc600085018261224c565b506020820151612c0f602085018261224c565b506040820151612c22604085018261224c565b506060820151612c35606085018261224c565b50505050565b6000608082019050612c506000830184612be6565b92915050565b60028110612c6357600080fd5b50565b600081359050612c7581612c56565b92915050565b600080600060608486031215612c9457612c936123a8565b5b6000612ca286828701612c66565b9350506020612cb386828701612454565b9250506040612cc4868287016123fb565b9150509250925092565b608082016000820151612ce4600085018261224c565b506020820151612cf7602085018261224c565b506040820151612d0a604085018261224c565b506060820151612d1d606085018261224c565b50505050565b6000608082019050612d386000830184612cce565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081905092915050565b50565b6000612d88600083612d6d565b9150612d9382612d78565b600082019050919050565b6000612da982612d7b565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ded82612242565b9150612df883612242565b9250828201905080821115612e1057612e0f612db3565b5b92915050565b6000819050919050565b6000612e3b612e36612e31846123b2565b612e16565b6123b2565b9050919050565b6000612e4d82612e20565b9050919050565b6000612e5f82612e42565b9050919050565b612e6f81612e54565b82525050565b6000606082019050612e8a6000830186612b0b565b612e976020830185612e66565b612ea46040830184612335565b949350505050565b600081519050612ebb816129d0565b92915050565b600060208284031215612ed757612ed66123a8565b5b6000612ee584828501612eac565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612f2882612242565b9150612f3383612242565b925082612f4357612f42612eee565b5b828204905092915050565b6000612f5982612242565b9150612f6483612242565b9250828202612f7281612242565b91508282048414831517612f8957612f88612db3565b5b5092915050565b6000612f9b82612242565b9150612fa683612242565b9250828203905081811115612fbe57612fbd612db3565b5b92915050565b6000604082019050612fd96000830185612b0b565b612fe66020830184612335565b9392505050565b7f506c6561736520636865636b2049434f2074696d650000000000000000000000600082015250565b60006130236015836122b0565b915061302e82612fed565b602082019050919050565b6000602082019050818103600083015261305281613016565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061309382612242565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036130c5576130c4612db3565b5b600182019050919050565b60006060820190506130e56000830186612b0b565b6130f26020830185612b0b565b6130ff6040830184612335565b949350505050565b600069ffffffffffffffffffff82169050919050565b61312681613107565b811461313157600080fd5b50565b6000815190506131438161311d565b92915050565b6000819050919050565b61315c81613149565b811461316757600080fd5b50565b60008151905061317981613153565b92915050565b60008151905061318e8161243d565b92915050565b600080600080600060a086880312156131b0576131af6123a8565b5b60006131be88828901613134565b95505060206131cf8882890161316a565b94505060406131e08882890161317f565b93505060606131f18882890161317f565b925050608061320288828901613134565b915050929550929590935056fea2646970667358221220c35a48df631ae4d2bfbdfc695f84d25f0f7920f2be5752799274f289ff77df4d64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106101855760003560e01c8063715018a6116100d1578063a8766bc11161008a578063d0d5a1ba11610064578063d0d5a1ba14610556578063e4db04fb14610586578063f2fde38b146105c3578063fd47504c146105ec57610199565b8063a8766bc1146104e9578063b47e536314610514578063cee401ef1461053f57610199565b8063715018a6146103d95780637ad3def2146103f05780637b770045146104195780638da5cb5b146104445780639c89f0fe1461046f578063a8525aa3146104ac57610199565b806332bd6ac11161013e578063562c9bca11610118578063562c9bca1461031d5780636386c1c7146103485780636c3ed4c8146103855780636cf557ec146103b057610199565b806332bd6ac1146102a05780633c0b15c0146102dd5780634451d89f1461030657610199565b8063033a35c01461019e57806306ea27ef146101c9578063146ca531146101e05780631cb44dfc1461020f5780631f565e311461023857806328a0d8f11461027557610199565b36610199576101976000346000610617565b005b600080fd5b3480156101aa57600080fd5b506101b3610ca7565b6040516101c0919061228a565b60405180910390f35b3480156101d557600080fd5b506101de610cd5565b005b3480156101ec57600080fd5b506101f5610d09565b604051610206959493929190612344565b60405180910390f35b34801561021b57600080fd5b5061023660048036038101906102319190612410565b610e66565b005b34801561024457600080fd5b5061025f600480360381019061025a9190612469565b610eb2565b60405161026c91906124b1565b60405180910390f35b34801561028157600080fd5b5061028a610f01565b604051610297919061250e565b60405180910390f35b3480156102ac57600080fd5b506102c760048036038101906102c291906125f9565b610f39565b6040516102d491906124b1565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff91906127b6565b610f66565b005b34801561031257600080fd5b5061031b6111d2565b005b34801561032957600080fd5b50610332611755565b60405161033f91906124b1565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a9190612410565b611785565b60405161037c91906128a9565b60405180910390f35b34801561039157600080fd5b5061039a611810565b6040516103a79190612982565b60405180910390f35b3480156103bc57600080fd5b506103d760048036038101906103d29190612a93565b61189e565b005b3480156103e557600080fd5b506103ee611990565b005b3480156103fc57600080fd5b5061041760048036038101906104129190612410565b6119a4565b005b34801561042557600080fd5b5061042e611a37565b60405161043b91906124b1565b60405180910390f35b34801561045057600080fd5b50610459611a67565b6040516104669190612b1a565b60405180910390f35b34801561047b57600080fd5b5061049660048036038101906104919190612410565b611a90565b6040516104a391906124b1565b60405180910390f35b3480156104b857600080fd5b506104d360048036038101906104ce9190612b35565b611ae6565b6040516104e091906124b1565b60405180910390f35b3480156104f557600080fd5b506104fe611c54565b60405161050b9190612bcb565b60405180910390f35b34801561052057600080fd5b50610529611c82565b6040516105369190612c3b565b60405180910390f35b34801561054b57600080fd5b50610554611cc4565b005b610570600480360381019061056b9190612c7b565b610617565b60405161057d91906124b1565b60405180910390f35b34801561059257600080fd5b506105ad60048036038101906105a89190612469565b611dee565b6040516105ba91906124b1565b60405180910390f35b3480156105cf57600080fd5b506105ea60048036038101906105e59190612410565b611e76565b005b3480156105f857600080fd5b50610601611efc565b60405161060e9190612d23565b60405180910390f35b60008060026000015403610657576040517f6f312cbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60004290506000339050600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600060018111156106b9576106b8612d3e565b5b8860018111156106cc576106cb612d3e565b5b036107de576106da34611f3e565b91506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405161072490612d9e565b60006040518083038185875af1925050503d8060008114610761576040519150601f19603f3d011682016040523d82523d6000602084013e610766565b606091505b50509050806107a1576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b348260030160008282546107b59190612de2565b9250508190555034601360000160008282546107d19190612de2565b925050819055505061096b565b6001808111156107f1576107f0612d3e565b5b88600181111561080457610803612d3e565b5b0361096a57869150600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661088f576040517fbf888b5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd84600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b81526004016108ee93929190612e75565b6020604051808303816000875af115801561090d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109319190612ec1565b50818160020160008282546109469190612de2565b9250508190555081601360010160008282546109629190612de2565b925050819055505b5b6000600960000154851015801561098757506009600101548511155b15610a4357600454600260000154846109a09190612f1d565b6109aa9190612f4e565b905080600f6001015410156109eb576040517fd013fe7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f6001016000828254610a009190612f90565b9250508190555080600f6000016000828254610a1c9190612de2565b9250508190555080826000016000828254610a379190612de2565b92505081905550610b4c565b6009600201548510158015610a5d57506009600301548511155b15610b195760045460026001015484610a769190612f1d565b610a809190612f4e565b905080600f600301541015610ac1576040517fd013fe7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f6003016000828254610ad69190612f90565b9250508190555080600f6002016000828254610af29190612de2565b9250508190555080826001016000828254610b0d9190612de2565b92505081905550610b4b565b6040517ff721b7ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b60008111610b86576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060136002016000828254610b9b9190612de2565b9250508190555080826004016000828254610bb69190612de2565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401610c1a929190612fc4565b6020604051808303816000875af1158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190612ec1565b5082817fe58b9ee1e58fdb7c85bb2c81b24351f11e5a77f2c91dc346c0444da8d47fef5e86604051610c8f9190612b1a565b60405180910390a36001955050505050509392505050565b610caf61216e565b600d60405180604001604052908160008201548152602001600182015481525050905090565b610cdd61201b565b601660019054906101000a900460ff1615601660016101000a81548160ff021916908315150217905550565b606060008060008060004290506009600001548110158015610d3057506009600101548111155b15610d995760006040518060400160405280600981526020017f50726553616c6520310000000000000000000000000000000000000000000000815250905080600960010154600d60000154600f60000154600260000154965096509650965096505050610e5f565b6009600201548110158015610db357506009600301548111155b15610e1c5760006040518060400160405280600d81526020017f5075626c69632053616c65203100000000000000000000000000000000000000815250905080600960030154600d60010154600f60020154600260010154965096509650965096505050610e5f565b6000610e5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5490613039565b60405180910390fd5b505b9091929394565b610e6e61201b565b80601d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610ebc61201b565b42600960010181905550816009600201819055506001600654600960020154610ee59190612de2565b610eef9190612f90565b60096003018190555060019050919050565b610f09612188565b60136040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b6000610f4361201b565b816002600082015181600001556020820151816001015590505060019050919050565b610f6e61201b565b8151835114610fa9576040517f34080bf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060188190555062278d006019819055506001601660016101000a81548160ff021916908315150217905550600080600090505b8451811015611128576017858281518110610ffb57610ffa613059565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083818151811061107657611075613059565b5b6020026020010151601a600087848151811061109557611094613059565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110e69190612de2565b92505081905550838181518110611100576110ff613059565b5b6020026020010151826111139190612de2565b9150808061112090613088565b915050610fdd565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611188939291906130d0565b6020604051808303816000875af11580156111a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb9190612ec1565b5050505050565b601660019054906101000a900460ff16611218576040517f74f75e3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611291576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000601854601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611362576019546018546112eb9190612de2565b42111561131457601954601854426113039190612f90565b61130d9190612f1d565b9050611319565b600190505b42601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114a1565b601854601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106114a057601954601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426113f89190612f90565b6114029190612f1d565b9050601954816114129190612f4e565b601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461145c9190612de2565b601c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b60006018601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114ef9190612f1d565b9050600082826114ff9190612f4e565b9050601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481601b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461158c9190612de2565b111561161f57601b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461161c9190612f90565b90505b60008103611659576040517fcbca5aa200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80601b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116a89190612de2565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161170c929190612fc4565b6020604051808303816000875af115801561172b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174f9190612ec1565b50505050565b600060096003015442118061176f57506000600f60030154145b1561177d5760019050611782565b600090505b90565b61178d6121a9565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6060601780548060200260200160405190810160405280929190818152602001828054801561189457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161184a575b5050505050905090565b6118a661201b565b80518251146118e1576040517f34080bf700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561198b57818181518110611900576118ff613059565b5b60200260200101516007600085848151811061191f5761191e613059565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061198390613088565b9150506118e4565b505050565b61199861201b565b6119a260006120a2565b565b6119ac61201b565b601660009054906101000a900460ff16156119f3576040517ff2a5f75a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600960010154421180611a5157506000600f60010154145b15611a5f5760019050611a64565b600090505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000611af061201b565b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401611b2b929190612fc4565b6020604051808303816000875af1158015611b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6e9190612ec1565b50600047118015611b7c5750815b15611c48576000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1647604051611bc990612d9e565b60006040518083038185875af1925050503d8060008114611c06576040519150601f19603f3d011682016040523d82523d6000602084013e611c0b565b606091505b5050905080611c46576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b60019050949350505050565b611c5c6121d8565b600260405180604001604052908160008201548152602001600182015481525050905090565b611c8a6121f2565b600f604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b611ccc61201b565b601660009054906101000a900460ff1615611d13576040517ff2a5f75a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001601660006101000a81548160ff0219169083151502179055506000600d60010154600d60000154611d469190612de2565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611da7939291906130d0565b6020604051808303816000875af1158015611dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dea9190612ec1565b5050565b6000611df861201b565b816009600001819055506001600654600960000154611e179190612de2565b611e219190612f90565b6009600101819055506001600960010154611e3c9190612de2565b6009600201819055506001600654600960020154611e5a9190612de2565b611e649190612f90565b60096003018190555060019050919050565b611e7e61201b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ef05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611ee79190612b1a565b60405180910390fd5b611ef9816120a2565b50565b611f0461221a565b6009604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905090565b600080601d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd29190613194565b50505091505060006402540be40082611feb9190612f4e565b90506000670de0b6b3a764000085836120049190612f4e565b61200e9190612f1d565b9050809350505050919050565b612023612166565b73ffffffffffffffffffffffffffffffffffffffff16612041611a67565b73ffffffffffffffffffffffffffffffffffffffff16146120a057612064612166565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016120979190612b1a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000819050919050565b61225581612242565b82525050565b604082016000820151612271600085018261224c565b506020820151612284602085018261224c565b50505050565b600060408201905061229f600083018461225b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122df5780820151818401526020810190506122c4565b60008484015250505050565b6000601f19601f8301169050919050565b6000612307826122a5565b61231181856122b0565b93506123218185602086016122c1565b61232a816122eb565b840191505092915050565b61233e81612242565b82525050565b600060a082019050818103600083015261235e81886122fc565b905061236d6020830187612335565b61237a6040830186612335565b6123876060830185612335565b6123946080830184612335565b9695505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123dd826123b2565b9050919050565b6123ed816123d2565b81146123f857600080fd5b50565b60008135905061240a816123e4565b92915050565b600060208284031215612426576124256123a8565b5b6000612434848285016123fb565b91505092915050565b61244681612242565b811461245157600080fd5b50565b6000813590506124638161243d565b92915050565b60006020828403121561247f5761247e6123a8565b5b600061248d84828501612454565b91505092915050565b60008115159050919050565b6124ab81612496565b82525050565b60006020820190506124c660008301846124a2565b92915050565b6060820160008201516124e2600085018261224c565b5060208201516124f5602085018261224c565b506040820151612508604085018261224c565b50505050565b600060608201905061252360008301846124cc565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612566826122eb565b810181811067ffffffffffffffff821117156125855761258461252e565b5b80604052505050565b600061259861239e565b90506125a4828261255d565b919050565b6000604082840312156125bf576125be612529565b5b6125c9604061258e565b905060006125d984828501612454565b60008301525060206125ed84828501612454565b60208301525092915050565b60006040828403121561260f5761260e6123a8565b5b600061261d848285016125a9565b91505092915050565b600080fd5b600067ffffffffffffffff8211156126465761264561252e565b5b602082029050602081019050919050565b600080fd5b600061266f61266a8461262b565b61258e565b9050808382526020820190506020840283018581111561269257612691612657565b5b835b818110156126bb57806126a788826123fb565b845260208401935050602081019050612694565b5050509392505050565b600082601f8301126126da576126d9612626565b5b81356126ea84826020860161265c565b91505092915050565b600067ffffffffffffffff82111561270e5761270d61252e565b5b602082029050602081019050919050565b600061273261272d846126f3565b61258e565b9050808382526020820190506020840283018581111561275557612754612657565b5b835b8181101561277e578061276a8882612454565b845260208401935050602081019050612757565b5050509392505050565b600082601f83011261279d5761279c612626565b5b81356127ad84826020860161271f565b91505092915050565b6000806000606084860312156127cf576127ce6123a8565b5b600084013567ffffffffffffffff8111156127ed576127ec6123ad565b5b6127f9868287016126c5565b935050602084013567ffffffffffffffff81111561281a576128196123ad565b5b61282686828701612788565b925050604061283786828701612454565b9150509250925092565b60a082016000820151612857600085018261224c565b50602082015161286a602085018261224c565b50604082015161287d604085018261224c565b506060820151612890606085018261224c565b5060808201516128a3608085018261224c565b50505050565b600060a0820190506128be6000830184612841565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128f9816123d2565b82525050565b600061290b83836128f0565b60208301905092915050565b6000602082019050919050565b600061292f826128c4565b61293981856128cf565b9350612944836128e0565b8060005b8381101561297557815161295c88826128ff565b975061296783612917565b925050600181019050612948565b5085935050505092915050565b6000602082019050818103600083015261299c8184612924565b905092915050565b600067ffffffffffffffff8211156129bf576129be61252e565b5b602082029050602081019050919050565b6129d981612496565b81146129e457600080fd5b50565b6000813590506129f6816129d0565b92915050565b6000612a0f612a0a846129a4565b61258e565b90508083825260208201905060208402830185811115612a3257612a31612657565b5b835b81811015612a5b5780612a4788826129e7565b845260208401935050602081019050612a34565b5050509392505050565b600082601f830112612a7a57612a79612626565b5b8135612a8a8482602086016129fc565b91505092915050565b60008060408385031215612aaa57612aa96123a8565b5b600083013567ffffffffffffffff811115612ac857612ac76123ad565b5b612ad4858286016126c5565b925050602083013567ffffffffffffffff811115612af557612af46123ad565b5b612b0185828601612a65565b9150509250929050565b612b14816123d2565b82525050565b6000602082019050612b2f6000830184612b0b565b92915050565b60008060008060808587031215612b4f57612b4e6123a8565b5b6000612b5d878288016123fb565b9450506020612b6e87828801612454565b9350506040612b7f878288016123fb565b9250506060612b90878288016129e7565b91505092959194509250565b604082016000820151612bb2600085018261224c565b506020820151612bc5602085018261224c565b50505050565b6000604082019050612be06000830184612b9c565b92915050565b608082016000820151612bfc600085018261224c565b506020820151612c0f602085018261224c565b506040820151612c22604085018261224c565b506060820151612c35606085018261224c565b50505050565b6000608082019050612c506000830184612be6565b92915050565b60028110612c6357600080fd5b50565b600081359050612c7581612c56565b92915050565b600080600060608486031215612c9457612c936123a8565b5b6000612ca286828701612c66565b9350506020612cb386828701612454565b9250506040612cc4868287016123fb565b9150509250925092565b608082016000820151612ce4600085018261224c565b506020820151612cf7602085018261224c565b506040820151612d0a604085018261224c565b506060820151612d1d606085018261224c565b50505050565b6000608082019050612d386000830184612cce565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081905092915050565b50565b6000612d88600083612d6d565b9150612d9382612d78565b600082019050919050565b6000612da982612d7b565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ded82612242565b9150612df883612242565b9250828201905080821115612e1057612e0f612db3565b5b92915050565b6000819050919050565b6000612e3b612e36612e31846123b2565b612e16565b6123b2565b9050919050565b6000612e4d82612e20565b9050919050565b6000612e5f82612e42565b9050919050565b612e6f81612e54565b82525050565b6000606082019050612e8a6000830186612b0b565b612e976020830185612e66565b612ea46040830184612335565b949350505050565b600081519050612ebb816129d0565b92915050565b600060208284031215612ed757612ed66123a8565b5b6000612ee584828501612eac565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612f2882612242565b9150612f3383612242565b925082612f4357612f42612eee565b5b828204905092915050565b6000612f5982612242565b9150612f6483612242565b9250828202612f7281612242565b91508282048414831517612f8957612f88612db3565b5b5092915050565b6000612f9b82612242565b9150612fa683612242565b9250828203905081811115612fbe57612fbd612db3565b5b92915050565b6000604082019050612fd96000830185612b0b565b612fe66020830184612335565b9392505050565b7f506c6561736520636865636b2049434f2074696d650000000000000000000000600082015250565b60006130236015836122b0565b915061302e82612fed565b602082019050919050565b6000602082019050818103600083015261305281613016565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061309382612242565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036130c5576130c4612db3565b5b600182019050919050565b60006060820190506130e56000830186612b0b565b6130f26020830185612b0b565b6130ff6040830184612335565b949350505050565b600069ffffffffffffffffffff82169050919050565b61312681613107565b811461313157600080fd5b50565b6000815190506131438161311d565b92915050565b6000819050919050565b61315c81613149565b811461316757600080fd5b50565b60008151905061317981613153565b92915050565b60008151905061318e8161243d565b92915050565b600080600080600060a086880312156131b0576131af6123a8565b5b60006131be88828901613134565b95505060206131cf8882890161316a565b94505060406131e08882890161317f565b93505060606131f18882890161317f565b925050608061320288828901613134565b915050929550929590935056fea2646970667358221220c35a48df631ae4d2bfbdfc695f84d25f0f7920f2be5752799274f289ff77df4d64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 222,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)183"
      },
      {
        "astId": 225,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "tokenPriceInUSD",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(TokenPriceInUSD)325_storage"
      },
      {
        "astId": 228,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "precision",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 230,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "projectWallet",
        "offset": 0,
        "slot": "5",
        "type": "t_address_payable"
      },
      {
        "astId": 232,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "roundPeriod",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 236,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "isAllowedStableCoin",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 241,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "userInfo",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(UserInfo)313_storage)"
      },
      {
        "astId": 244,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "roundTimeInfo",
        "offset": 0,
        "slot": "9",
        "type": "t_struct(RoundTimeInfo)288_storage"
      },
      {
        "astId": 247,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "roundHardCapInfo",
        "offset": 0,
        "slot": "13",
        "type": "t_struct(RoundHardCapInfo)293_storage"
      },
      {
        "astId": 250,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "roundTokenSaleInfo",
        "offset": 0,
        "slot": "15",
        "type": "t_struct(RoundTokenSaleInfo)302_storage"
      },
      {
        "astId": 253,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "icoInfo",
        "offset": 0,
        "slot": "19",
        "type": "t_struct(ICOInfo)320_storage"
      },
      {
        "astId": 255,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "isICOEnabled",
        "offset": 0,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 257,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "isVestingEnabled",
        "offset": 1,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 260,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "teamAndDevMembers",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 262,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "claimStartedAt",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      },
      {
        "astId": 264,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "minimumDelayBetweenClaim",
        "offset": 0,
        "slot": "25",
        "type": "t_uint256"
      },
      {
        "astId": 268,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "memberToTotalAmount",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 272,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "memberToTotalAmountClaimed",
        "offset": 0,
        "slot": "27",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 276,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "memberLastClaimedAT",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 279,
        "contract": "contracts/LilRollsICO.sol:LilRollsICO",
        "label": "priceFeed",
        "offset": 0,
        "slot": "29",
        "type": "t_contract(AggregatorV3Interface)197"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)197": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)183": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(UserInfo)313_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LilRollsICO.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)313_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(ICOInfo)320_storage": {
        "encoding": "inplace",
        "label": "struct LilRollsICO.ICOInfo",
        "members": [
          {
            "astId": 315,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "raisedTotalBase",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 317,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "raisedTotalSCToken",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 319,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "soldToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(RoundHardCapInfo)293_storage": {
        "encoding": "inplace",
        "label": "struct LilRollsICO.RoundHardCapInfo",
        "members": [
          {
            "astId": 290,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r1HardCap",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 292,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r2HardCap",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(RoundTimeInfo)288_storage": {
        "encoding": "inplace",
        "label": "struct LilRollsICO.RoundTimeInfo",
        "members": [
          {
            "astId": 281,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r1StartTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 283,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r1EndTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 285,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r2StartTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 287,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r2EndTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(RoundTokenSaleInfo)302_storage": {
        "encoding": "inplace",
        "label": "struct LilRollsICO.RoundTokenSaleInfo",
        "members": [
          {
            "astId": 295,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r1SoldToken",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 297,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r1TokenForSale",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 299,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r2SoldToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 301,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r2TokenForSale",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(TokenPriceInUSD)325_storage": {
        "encoding": "inplace",
        "label": "struct LilRollsICO.TokenPriceInUSD",
        "members": [
          {
            "astId": 322,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "round1",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 324,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "round2",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(UserInfo)313_storage": {
        "encoding": "inplace",
        "label": "struct LilRollsICO.UserInfo",
        "members": [
          {
            "astId": 304,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r1Purchased",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 306,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "r2Purchased",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 308,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "totalSCInvested",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 310,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "totalBaseInvested",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 312,
            "contract": "contracts/LilRollsICO.sol:LilRollsICO",
            "label": "totalPurchased",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}